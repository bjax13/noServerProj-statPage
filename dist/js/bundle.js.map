{"version":3,"sources":["app.js","home/homeCtrl.js","soloStat/soloStatCtrl.js","services/codewarsSvc.js","teamStat/teamStatCtrl.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","$scope","test","codewarsSvc","coderInfo","then","response","console","log","soloUser","service","$http","$q","defer","method","data","resolve","userName","username","summaryImg","clan","honor","leaderboardPosition","overallRank","ranks","overall","skills","challangeCompleted","codeChallenges","totalCompleted","promise"],"mappings":";;AAAAA,QAAQC,MAAR,CAAe,SAAf,EAAyB,CAAC,WAAD,CAAzB,EACCC,MADD,CACQ,UAAUC,cAAV,EAA0BC,kBAA1B,EAA8C;;AAEpDA,qBAAmBC,SAAnB,CAA6B,GAA7B;;AAGAF,iBACGG,KADH,CACS,MADT,EACgB;AACZC,SAAK,GADO;AAEZC,iBAAa,sBAFD;AAGZC,gBAAY;AAHA,GADhB,EAMGH,KANH,CAMS,UANT,EAMoB;AAChBC,SAAK,WADW;AAEhBC,iBAAa,8BAFG;AAGhBC,gBAAY;AAHI,GANpB,EAWGH,KAXH,CAWS,UAXT,EAWoB;AAChBC,SAAK,WADW;AAEhBC,iBAAa,8BAFG;AAGhBC,gBAAY;AAHI,GAXpB;AAiBD,CAvBD;;;ACAAT,QAAQC,MAAR,CAAe,SAAf,EACGQ,UADH,CACc,UADd,EAC0B,UAAUC,MAAV,EAAkB;AACxCA,SAAOC,IAAP,GAAc,eAAd;AAGD,CALH;;;ACAAX,QAAQC,MAAR,CAAe,SAAf,EACGQ,UADH,CACc,cADd,EAC8B,UAAUC,MAAV,EAAkBE,WAAlB,EAA+B;AACzDF,SAAOC,IAAP,GAAc,eAAd;;AAEAD,SAAOG,SAAP,GAAmB,YAAY;AAC7BD,gBAAYC,SAAZ,GAAwBC,IAAxB,CAA6B,UAAUC,QAAV,EAAoB;AAC/CC,cAAQC,GAAR,CAAYF,QAAZ;AACAL,aAAOQ,QAAP,GAAkBH,QAAlB;AACD,KAHD;AAID,GALD;;AAOAL,SAAOG,SAAP;AAGD,CAdH;;;ACAAb,QAAQC,MAAR,CAAe,SAAf,EACGkB,OADH,CACW,aADX,EACyB,UAAUC,KAAV,EAAiBC,EAAjB,EAAqB;;AAE1C,OAAKR,SAAL,GAAiB,YAAY;AAC3B,QAAIS,QAAQD,GAAGC,KAAH,EAAZ;AACAF,UAAO;AACLG,cAAQ,KADH;AAELhB,WAAK;AACL;AAHK,KAAP,EAIGO,IAJH,CAIQ,UAAUC,QAAV,EAAoB;AAC1BC,cAAQC,GAAR,CAAYF,SAASS,IAArB;AACAF,YAAMG,OAAN,CAAc;AACZC,kBAAUX,SAASS,IAAT,CAAcG,QADZ;AAEZC,oBAAW,oCAAmCb,SAASS,IAAT,CAAcG,QAAjD,GAA2D,eAF1D;AAGZE,cAAMd,SAASS,IAAT,CAAcK,IAHR;AAIZC,eAAOf,SAASS,IAAT,CAAcM,KAJT;AAKZC,6BAAqBhB,SAASS,IAAT,CAAcO,mBALvB;AAMZC,qBAAajB,SAASS,IAAT,CAAcS,KAAd,CAAoBC,OANrB;AAOZC,gBAAQpB,SAASS,IAAT,CAAcW,MAPV;AAQZC,4BAAoBrB,SAASS,IAAT,CAAca,cAAd,CAA6BC;AARrC,OAAd;AAUD,KAhBD;;AAkBA,WAAOhB,MAAMiB,OAAb;AACD,GArBD;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,CAvCH;;;ACAAvC,QAAQC,MAAR,CAAe,SAAf,EACGQ,UADH,CACc,cADd,EAC8B,UAAUC,MAAV,EAAkB;AAC5CA,SAAOC,IAAP,GAAc,eAAd;AAGD,CALH","file":"bundle.js","sourcesContent":["angular.module('statApp',['ui.router'])\n.config(function ($stateProvider, $urlRouterProvider) {\n\n  $urlRouterProvider.otherwise('/');\n\n\n  $stateProvider\n    .state('home',{\n      url: '/',\n      templateUrl: 'pages/home/home.html',\n      controller: 'homeCtrl'\n    })\n    .state('soloStat',{\n      url: '/soloStat',\n      templateUrl: 'pages/soloStat/soloStat.html',\n      controller: 'soloStatCtrl'\n    })\n    .state('teamStat',{\n      url: '/teamStat',\n      templateUrl: 'pages/teamStat/teamStat.html',\n      controller: 'teamStatCtrl'\n    })\n\n})\n","angular.module('statApp')\n  .controller('homeCtrl', function ($scope) {\n    $scope.test = \"It is alive!!\";\n\n\n  })\n","angular.module('statApp')\n  .controller('soloStatCtrl', function ($scope, codewarsSvc) {\n    $scope.test = \"It is alive!!\";\n\n    $scope.coderInfo = function () {\n      codewarsSvc.coderInfo().then(function (response) {\n        console.log(response);\n        $scope.soloUser = response;\n      })\n    }\n\n    $scope.coderInfo();\n\n\n  })\n","angular.module('statApp')\n  .service('codewarsSvc',function ($http, $q) {\n\n    this.coderInfo = function () {\n      var defer = $q.defer();\n      $http ({\n        method: 'GET',\n        url: 'https://www.codewars.com/api/v1/users/bjack13'\n        // DA2K-3FnsohzhzAp7xvQ codewars auth key\n      }).then(function (response) {\n        console.log(response.data);\n        defer.resolve({\n          userName: response.data.username,\n          summaryImg:'https://www.codewars.com/users/'+ response.data.username +'/badges/large',\n          clan: response.data.clan,\n          honor: response.data.honor,\n          leaderboardPosition: response.data.leaderboardPosition,\n          overallRank: response.data.ranks.overall,\n          skills: response.data.skills,\n          challangeCompleted: response.data.codeChallenges.totalCompleted,\n        })\n      })\n\n      return defer.promise;\n    }\n\n\n    // this.getLuke = function () {\n    //     var defer = $q.defer();\n    //     $http({\n    //       method: 'GET',\n    //       url: baseUrl + 'api/people/1'\n    //     }).then(function (response) {\n    //       defer.resolve(response.data);\n    //\n    //     })\n    //     return defer.promise;\n    //   }\n\n  })\n","angular.module('statApp')\n  .controller('teamStatCtrl', function ($scope) {\n    $scope.test = \"It is alive!!\";\n\n\n  })\n"]}